#Instance 2023

cardO = 36 #nombre d'opérateurs
cardP = 36 #nombre de postes
cardR = 36 #longueur du roulement
cardS = 36 #horizon du planning en semaines

#Roulement et intitulé des postes
#0 - Déch 12h45
#1 - Auto 7h
#2 - REC-10h30-Uro/Visc/cpp
#3 - Lav-cond-7h
#4 - Rouleur Rec
#5 - Cond 2- 10h30
#6 - R-RTT
#7 - REC-10h30-Ortho
#8 - REC-9h-spé/cp/oph
#9 - Déch 10h30
#10 - Cond 12h45
#11 - REC-10h30-Larrey-1
#12 - Déch 7h
#13 - R
#14 - Lav2-Rc-10h30
#15 - Cond-2- 7h
#16 - Sté 10h30
#17 - R
#18 - Lav 1- 7h
#19 - Rouleur Rec
#20 - Auto 12h45
#21 - REC-10h30-spé/cp/oph
#22 - Cond-1- 7h
#23 - R
#24 - REC-9h-Ortho
#25 - Cond 1- 10h30
#26 - Lav 2- 7h
#27 - R
#28 - R-7h *
#29 - REC-10h30-Larrey-2
#30 - Sté 12h45
#31 - Rouleur Rec
#32 - Sté 7h
#33 - Lav 1- 10h30
#34 - R
#35 - REC-8h-urg+larrey

#Postes rouleurs (rho[p] = 1 non rouleur, rho[p] = 0 rouleur)
rho = [1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,0,1,1,0,1,1,0,1]

#Creneaux des postes (0=rouleur, 1=7h00, 2=8h00, 3=9h00, 4=10h30, 5=12h45)
creneaux = [5,1,4,1,0,4,0,4,3,4,5,4,1,0,4,1,4,0,1,0,5,4,1,0,3,4,1,0,0,4,5,0,1,4,0,2]

#sigma (sigma[p][p'] = 1 si les postes p et p' sont permutables, 0 sinon)
#Règle de construction : si les creneaux des postes sont identiques ou si l'un des deux postes est rouleur, alors les postes sont permutables
sigma = []
for index1 in range(len(creneaux)):
    creneau1 = creneaux[index1]
    ligneSigma = []
    for index2 in range(len(creneaux)):
        creneau2 = creneaux[index2]
        if creneau1 == creneau2 or creneau1 == 0 or creneau2 == 0:
            ligneSigma.append(1)
        else:
            ligneSigma.append(0)
    sigma.append(ligneSigma)

#postes facultatifs version modèle mathématique (fac[p] = 1 si facultatif, 0 sinon)
fac = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

#postes facultatifs version algorithme (idem)
fac = [2,15,22]

#kappa (kappa[i][p] = 1 si l'opérateur i a la compétence pour effectuer le poste p, 0 sinon)
kappa = [
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[1,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,0,0,1,0,1,1,0,0,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[1,0,0,1,0,1,1,0,0,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0],
[0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,0],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[0,1,1,0,1,1,1,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1],
[0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[0,0,1,0,1,1,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,1,1,0,1,1,0,0,0,1,0,1,0,0,0,1],
[0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1],
[0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1]]


